{"version":3,"sources":["assets/image1.svg","assets/plus.svg","components/Sidebar.tsx","components/Header.tsx","components/ProjectCard.tsx","components/NewCard.tsx","components/Interfaces/ProjectInterface.tsx","components/Layout.tsx","components/Projects.tsx","components/Error.tsx","components/CreateProject.tsx","components/CreatePhase.tsx","components/PhaseCard.tsx","components/Project.tsx","components/CreateTask.tsx","components/Task.tsx","components/Tasks.tsx","components/Phase.tsx","components/Registration.tsx","components/RegistrationPage.tsx","components/Settings.tsx","UserContext.tsx","components/Login.tsx","components/Home.tsx","components/LoginPage.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Sidebar","useState","user","setUser","useEffect","a","axios","get","withCredentials","res","data","getUser","className","src","require","alt","firstName","to","fill","xmlns","viewBox","width","height","d","Header","title","description","ProjectCard","history","useHistory","onClick","push","id","name","category","NewCard","destination","init","Layout","children","Projects","projects","setProjects","getProjects","map","project","key","Error","error","CreateProject","setName","setDescription","setCategory","dueDate","setDueDate","privacy","setPrivacy","undefined","setProject","setError","onSubmit","e","preventDefault","post","github","figma","then","r","response","msg","createProject","type","maxLength","required","onChange","target","value","CreatePhase","projectId","useParams","phase","setPhase","phaseNumber","err","createPhase","PhaseCard","Project","phases","getProject","getPhases","CreateTask","setTasks","tasks","taskText","setTaskText","phaseId","createTask","placeholder","Task","handleDragStart","dragging","handleDragEnter","draggable","onDragStart","stage","Tasks","setDragging","dragItem","useRef","dragNode","getTasks","params","current","addEventListener","handleDragEnd","setTimeout","newList","filter","task","currentTask","updateStage","removeEventListener","todos","inProgress","completed","onDragEnter","Phase","getPhase","Registration","setFirstName","lastName","setLastName","email","setEmail","password","setPassword","register","LoginPage","Settings","put","updateUser","UserContext","React","createContext","UserProvider","Provider","Consumer","Login","setLoggedIn","useContext","login","Home","App","loggedIn","isLoggedIn","path","exact","RegistrationPage","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","message"],"mappings":"6IAAAA,EAAOC,QAAU,IAA0B,oC,mBCA3CD,EAAOC,QAAU,IAA0B,kC,yICK5B,SAASC,IAAW,IAAD,EACNC,qBADM,mBACvBC,EADuB,KACjBC,EADiB,KAY9B,OATAC,qBAAU,YACO,uCAAG,4BAAAC,EAAA,sEACMC,IAAMC,IAAI,YAAa,CACrCC,iBAAiB,IAFT,OACNC,EADM,OAIZN,EAAQM,EAAIC,MAJA,2CAAH,qDAMbC,KACD,IAEC,yBAAKC,UAAU,WACX,yBAAKA,UAAU,wBACX,yBAAKC,IAAKC,EAAQ,IAAyBF,UAAU,wBAAwBG,IAAI,oBACjF,uBAAGH,UAAU,mBAAmBV,EAAOA,EAAKc,UAAY,MACxD,uBAAGJ,UAAU,wBAAuB,kBAAC,IAAD,CAAMK,GAAG,aAAT,cAGxC,yBAAKL,UAAU,wBACX,yBAAKA,UAAU,eACX,8BACI,yBAAKM,KAAK,UAAUC,MAAM,6BAA6BC,QAAQ,YAAYC,MAAM,OAAOC,OAAO,QAC3F,0BAAMC,EAAE,saAGhB,uBAAGX,UAAU,QAAO,kBAAC,IAAD,CAAMK,GAAG,KAAT,UAExB,yBAAKL,UAAU,eACX,8BACI,yBAAKM,KAAK,UAAUC,MAAM,6BAA6BC,QAAQ,YAAYC,MAAM,OAAOC,OAAO,QAC3F,0BAAMC,EAAE,0RAGhB,uBAAGX,UAAU,QAAO,kBAAC,IAAD,CAAMK,GAAG,oBAAT,0BCjCjC,IAaQO,EAbwB,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,YAC7C,OACI,yBAAKd,UAAU,mBACX,uBAAGA,UAAU,eAAgBa,GACxBC,EACG,yBAAKd,UAAU,qBACVc,GAEP,O,OCEHC,EAb6B,SAAC,GAAc,IAAZjB,EAAW,EAAXA,KACrCkB,EAAUC,cAChB,OACI,yBAAKjB,UAAU,uBAAuBkB,QAAS,kBAAMF,EAAQG,KAAR,oBAA0BrB,EAAKsB,OAChF,uBAAGpB,UAAU,eAAeF,EAAKuB,MACjC,uBAAGrB,UAAU,sBAAsBF,EAAKgB,aACxC,yBAAKd,UAAU,4BACX,uBAAGA,UAAU,mBAAmBF,EAAKwB,aCOtCC,EAfwD,SAAC,GAA4B,IAA1BV,EAAyB,EAAzBA,MAAOW,EAAkB,EAAlBA,YACvER,EAAUC,cAIhB,OACI,yBAAKjB,UAAU,mBAAmBkB,QAJpB,WACdF,EAAQG,KAAR,WAAiBK,MAIb,uBAAGxB,UAAU,gBAAgBa,GACzB,8BACI,yBAAKb,UAAU,eAAeC,IAAKC,EAAQ,IAAuBC,IAAI,0BCe7EsB,EAAO,CAAC,CACjB,GAAM,EACN,OAAU,GACV,KAAQ,GACR,YAAe,GACf,SAAY,GACZ,QAAW,GACX,MAAS,GACT,OAAU,GACV,SAAW,EACX,KAAQ,KC3BGC,EARiB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC/B,OACI,yBAAK3B,UAAU,8BACV2B,IC0BEC,EAvBkB,WAAO,IAAD,EACHvC,mBAA6BoC,GAD1B,mBAC5BI,EAD4B,KAClBC,EADkB,KAE7BC,EAAW,uCAAG,4BAAAtC,EAAA,sEACEC,IAAMC,IAAI,gBAAiB,CAAEC,iBAAiB,IADhD,OACVC,EADU,OAEhBiC,EAAYjC,EAAIC,MAFA,2CAAH,qDAQjB,OAHAN,qBAAU,WACNuC,MACD,IAEC,yBAAK/B,UAAU,IACX,kBAAC,EAAD,CAAQa,MAAM,aACd,kBAAC,EAAD,KACKgB,EAASG,KAAI,SAACC,GAAD,OACV,kBAAC,EAAD,CAAaC,IAAKD,EAAQb,GAAItB,KAAMmC,OAExC,kBAAC,EAAD,CAASpB,MAAM,qBAAqBW,YAAW,uBCThDW,EAVgB,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC9B,OACI,6BACI,yBAAKpC,UAAU,kBACToC,KCkEHC,EArEiB,WAAO,IAAD,EACVhD,mBAAS,IADC,mBAC3BgC,EAD2B,KACrBiB,EADqB,OAEIjD,mBAAS,IAFb,mBAE3ByB,EAF2B,KAEdyB,EAFc,OAGFlD,mBAAc,eAHZ,mBAG3BiC,EAH2B,KAGjBkB,EAHiB,OAIJnD,mBAAS,IAJL,mBAI3BoD,EAJ2B,KAIlBC,EAJkB,OAKJrD,mBAAc,WALV,mBAK3BsD,EAL2B,KAKlBC,EALkB,OAMJvD,wBAAcwD,GANV,mBAM3BZ,EAN2B,KAMlBa,EANkB,OAORzD,qBAPQ,mBAO3B+C,EAP2B,KAOpBW,EAPoB,KAQ5B/B,EAAUC,cAwBhB,OAHGgB,GACCjB,EAAQG,KAAR,oBAA0Bc,EAAQb,KAGlC,6BACG,kBAAC,EAAD,CAAQP,MAAM,WACb,kBAAC,EAAD,KACI,yBAAKb,UAAU,iBACToC,EAAQ,kBAAC,EAAD,CAAOA,MAAOA,IAAW,KACnC,0BAAMY,SA7BL,SAACC,GACb,OAADA,QAAC,IAADA,KAAGC,iBACgB,uCAAG,sBAAAzD,EAAA,+EAESC,IAAMyD,KAAK,mBAAoB,CAClD9B,OACAP,cACAQ,WACAmB,UACAW,OAAQ,aACRC,MAAO,YACPV,QAAqB,YAAZA,GACV,CAAE/C,iBAAiB,IACjB0D,MAAK,SAAAC,GAAC,OAAIT,EAAWS,EAAEzD,SAXd,6DAadiD,EAAS,KAAIS,SAAS1D,KAAK2D,KAbb,wDAAH,oDAgBnBC,KAYgB,2BAAO1D,UAAU,gBAAjB,QACA,2BAAO2D,KAAK,OAAO3D,UAAU,UAAU4D,UAAW,IAAKC,UAAQ,EAACC,SAAU,SAACb,GAAD,OAAOX,EAAQW,EAAEc,OAAOC,UAClG,2BAAOhE,UAAU,gBAAjB,eACA,8BAAUA,UAAU,sBAAsB8D,SAAU,SAACb,GAAD,OAAOV,EAAeU,EAAEc,OAAOC,QAAQJ,UAAW,MACtG,2BAAO5D,UAAU,gBAAjB,YACA,4BAAQA,UAAU,mBAAmBgE,MAAO1C,EAAUuC,UAAQ,EAACC,SAAU,SAACb,GAAD,OAAOT,EAAYS,EAAEc,OAAOC,SACjG,4BAAQA,MAAM,eAAd,eACA,4BAAQA,MAAM,kBAAd,kBACA,4BAAQA,MAAM,UAAd,UACA,4BAAQA,MAAM,WAAd,WACA,4BAAQA,MAAM,gBAAd,gBACA,4BAAQA,MAAM,aAAd,aACA,4BAAQA,MAAM,OAAd,OACA,4BAAQA,MAAM,SAAd,UAEJ,2BAAOhE,UAAU,gBAAjB,UACA,2BAAO2D,KAAK,OAAO3D,UAAU,eAAc8D,SAAU,SAACb,GAAD,OAAOP,EAAWO,EAAEc,OAAOC,UAChF,2BAAOhE,UAAU,gBAAjB,WACA,4BAAQA,UAAU,mBAAmBgE,MAAOrB,EAASmB,SAAU,SAACb,GAAD,OAAOL,EAAWK,EAAEc,OAAOC,SACtF,4BAAQA,MAAM,WAAd,WACA,4BAAQA,MAAM,UAAd,WAEJ,2BAAOL,KAAK,SAAS3D,UAAU,YAAYgE,MAAM,gBCI1DC,EAhEsB,WACjC,IAAMjD,EAAUC,cACRiD,EAAcC,cAAdD,UAF+B,EAGf7E,mBAAS,IAHM,mBAGhCgC,EAHgC,KAG1BiB,EAH0B,OAIDjD,mBAAS,IAJR,mBAIhCyB,EAJgC,KAInByB,EAJmB,OAKPlD,mBAAS,eALF,mBAKhCiC,EALgC,KAKtBkB,EALsB,OAMTnD,mBAAS,IANA,mBAMhCoD,EANgC,KAMvBC,EANuB,OAObrD,mBAAc,MAPD,mBAOhC+E,EAPgC,KAOzBC,EAPyB,OAQbhF,mBAAwB,MARX,mBAQhC+C,EARgC,KAQzBW,EARyB,KAgCvC,OAHIqB,GACApD,EAAQG,KAAR,iBAAuBiD,EAAMhD,KAG7B,6BACI,kBAAC,EAAD,CAAQP,MAAM,WACd,kBAAC,EAAD,KACI,yBAAKb,UAAU,iBACToC,EAAQ,kBAAC,EAAD,CAAOA,MAAOA,IAAW,KACnC,0BAAMY,SA7BP,SAACC,GACX,OAADA,QAAC,IAADA,KAAGC,iBACc,uCAAG,sBAAAzD,EAAA,sDAChB,IACgBC,IAAMyD,KAAK,iBAAkB,CACrCe,YACA7C,OACAiD,YAAa,EACbxD,cACAQ,WACAmB,WACD,CAAE7C,iBAAiB,IACjB0D,MAAK,SAAAC,GAAC,OAAIc,EAASd,EAAEzD,SAC7B,MAAMyE,GACHxB,EAASwB,EAAIf,SAAS1D,KAAK2D,KAZf,2CAAH,oDAejBe,KAagB,2BAAOxE,UAAU,gBAAjB,QACA,2BAAO2D,KAAK,OAAO3D,UAAU,UAAU4D,UAAW,IAAKC,UAAQ,EAACC,SAAU,SAAAb,GAAC,OAAIX,EAAQW,EAAEc,OAAOC,UAChG,2BAAOhE,UAAU,gBAAjB,eACA,8BAAUA,UAAU,sBAAuB4D,UAAW,IAAKE,SAAU,SAAAb,GAAC,OAAIV,EAAeU,EAAEc,OAAOC,UAClG,2BAAOhE,UAAU,gBAAjB,YACA,4BAAQA,UAAU,mBAAmBgE,MAAO1C,EAAUwC,SAAU,SAAAb,GAAC,OAAIT,EAAYS,EAAEc,OAAOC,SACtF,4BAAQA,MAAM,eAAd,eACA,4BAAQA,MAAM,kBAAd,kBACA,4BAAQA,MAAM,UAAd,UACA,4BAAQA,MAAM,WAAd,WACA,4BAAQA,MAAM,gBAAd,gBACA,4BAAQA,MAAM,aAAd,aACA,4BAAQA,MAAM,OAAd,OACA,4BAAQA,MAAM,SAAd,UAEJ,2BAAOhE,UAAU,gBAAjB,UACA,2BAAO2D,KAAK,OAAO3D,UAAU,eAAe8D,SAAU,SAAAb,GAAC,OAAIP,EAAWO,EAAEc,OAAOC,UAC/E,2BAAOL,KAAK,SAAS3D,UAAU,YAAYgE,MAAM,gBC3C1DS,EAjBoB,SAAC,GAAc,IAAZ3E,EAAW,EAAXA,KAC5BkB,EAAUC,cAChB,OACI,yBAAKjB,UAAU,qBAAqBkB,QAAS,kBAAMF,EAAQG,KAAR,iBAAuBrB,EAAKsB,OAC3E,yBAAKpB,UAAU,aACVF,EAAKuB,MAEV,yBAAKrB,UAAU,0BACX,uBAAGA,UAAU,iBAAiBF,EAAKwB,WAEvC,yBAAKtB,UAAU,oBACVF,EAAKgB,eCLP,SAAS4D,IAAW,IACvBtD,EAAO+C,cAAP/C,GADsB,EAEA/B,qBAFA,mBAEvB4C,EAFuB,KAEda,EAFc,OAGHzD,qBAHG,mBAGvBsF,EAHuB,KAGfN,EAHe,KAiB9B,OAZA7E,qBAAU,YACU,uCAAG,4BAAAC,EAAA,sEACGC,IAAMC,IAAN,uBAA0ByB,GAAM,CAAExB,iBAAiB,IADtD,OACTC,EADS,OAEfiD,EAAWjD,EAAIC,MAFA,2CAAH,qDAIhB8E,GACe,uCAAG,4BAAAnF,EAAA,sEACIC,IAAMC,IAAN,sBAAyByB,GAAM,CAAExB,iBAAiB,IADtD,OACRC,EADQ,OAEdwE,EAASxE,EAAIC,MAFC,2CAAH,oDAIf+E,KACD,IAEC,6BACI,kBAAC,EAAD,CAAQhE,MAAOoB,EAAUA,EAAQZ,KAAO,GAAIP,YAAamB,EAAUA,EAAQnB,YAAc,KACzF,kBAAC,EAAD,KACK6D,EACGA,EAAO3C,KAAI,SAACoC,GAAD,OACH,kBAAC,EAAD,CAAWlC,IAAKkC,EAAMhD,GAAItB,KAAMsE,OAE1C,KACDnC,EAAU,kBAAC,EAAD,CAASpB,MAAM,mBAAmBW,YAAW,uBAAkBS,EAAQb,MAAU,O,oBCJ7F0D,EA3B4L,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,SAAUC,EAAsB,EAAtBA,MAAOjC,EAAe,EAAfA,SACnN3B,EAAO+C,cAAP/C,GADkO,EAE1M/B,mBAAS,IAFiM,mBAEnO4F,EAFmO,KAEzNC,EAFyN,KAmB1O,OACI,0BAAMlC,SAjBK,SAACC,GACZA,EAAEC,iBACc,uCAAG,4BAAAzD,EAAA,+EAEOC,IAAMyD,KAAK,gBAAiB,CAC1CgC,QAAS/D,EACT6D,YACD,CAAErF,iBAAiB,IALX,OAELC,EAFK,OAMXqF,EAAY,IACZH,EAAS,GAAD,mBAAKC,GAAL,CAAYnF,EAAIC,QAPb,gDASXiD,EAAS,KAAIS,SAAS1D,KAAK2D,KAThB,yDAAH,oDAYhB2B,KAII,8BAAUpF,UAAU,eAAeqF,YAAY,sBAAsBrB,MAAOiB,EAAUnB,SAAU,SAACb,GAAD,OAAOiC,EAAYjC,EAAEc,OAAOC,UAC5H,2BAAOL,KAAK,SAAS3D,UAAU,YAAYgE,MAAM,aCd9CsB,EAVyB,SAAC,GAA0D,IAAxDxF,EAAuD,EAAvDA,KAAMyF,EAAiD,EAAjDA,gBAAiD,EAAhCC,SAAgC,EAAtBC,gBACxE,OACI,yBAAKC,WAAS,EACdC,YAAa,SAAC1C,GAAD,OAAOsC,EAAgBtC,EAAG,CAAC7B,GAAItB,EAAKsB,GAAIwE,MAAO9F,EAAK8F,SACjE5F,UAAU,QACLF,EAAKmF,WC6FHY,EA7FM,WAAO,IAAD,EACGxG,qBADH,mBAChB2F,EADgB,KACTD,EADS,OAES1F,oBAAkB,GAF3B,mBAEhBmG,EAFgB,KAENM,EAFM,OAGGzG,mBAAwB,MAH3B,mBAGhB+C,EAHgB,KAGTW,EAHS,KAIf3B,EAAO+C,cAAP/C,GACF2E,EAAWC,mBACXC,EAAWD,mBAEjBxG,qBAAU,YACQ,uCAAG,4BAAAC,EAAA,sEACKC,IAAMC,IAAN,qBAAwByB,GAAM,CAAExB,iBAAiB,IADtD,OACPC,EADO,OAEbkF,EAASlF,EAAIC,MAFA,2CAAH,qDAIdoG,KACD,IAEH,IAAMX,EAAkB,SAACtC,EAAQkD,GAAiB,IAAD,EAC7CJ,EAASK,QAAUD,EACnBF,EAASG,QAAUnD,EAAEc,OACrB,UAAAkC,EAASG,eAAT,SAAkBC,iBAAiB,UAAWC,GAC9CC,YAAW,WACPT,GAAY,KACb,IAGDL,EAAkB,SAACxC,EAAQkD,GAE7B,GADAlD,EAAEC,iBACEiD,EAAOP,QAAUG,EAASK,QAAQR,MAAM,CACxC,IAAMY,EAAO,OAAGxB,QAAH,IAAGA,OAAH,EAAGA,EAAOyB,QAAO,SAACC,GAAD,OAAyBA,EAAKtF,KAAO2E,EAASK,QAAQhF,MAC9EuF,EAAc3B,EAAMyB,QAAO,SAACC,GAAD,OAAyBA,EAAKtF,KAAO2E,EAASK,QAAQhF,MACvF2D,GAAS,SAAC2B,GACN,GAAIA,IAAI,sBAASF,GAAT,4BAAsBG,EAAY,IAAlC,IAAsCf,MAAOO,EAAOP,UACxD,MAAM,GAAN,mBAAWY,GAAX,4BAAwBG,EAAY,IAApC,IAAwCf,MAAOO,EAAOP,aAG9DG,EAASK,QAAQR,MAAQO,EAAOP,QAIlCgB,EAAW,uCAAG,sBAAAnH,EAAA,sEACEC,IAAMyD,KAAN,oBAAwB4C,EAASK,QAAQhF,GAAzC,YAA+C2E,EAASK,QAAQR,OAClF,CAAEhG,iBAAiB,IAFH,yDAAH,qDAKX0G,EAAgB,SAAhBA,IAAuB,IAAD,EACxBM,IACAd,GAAY,GACZ,UAAAG,EAASG,eAAT,SAAkBS,oBAAoB,UAAWP,GACjDP,EAASK,QAAU,KACnBH,EAASG,QAAU,MAGjBU,EAAQ9B,EAAQA,EAAMyB,QAAO,SAACC,GAAD,MAAyC,UAAZ,OAAJA,QAAI,IAAJA,OAAA,EAAAA,EAAMd,UAAoB,KAChFmB,EAAa/B,EAAQA,EAAMyB,QAAO,SAACC,GAAD,MAAyC,iBAAZ,OAAJA,QAAI,IAAJA,OAAA,EAAAA,EAAMd,UAA2B,KAC5FoB,EAAYhC,EAAQA,EAAMyB,QAAO,SAACC,GAAD,MAAyC,eAAZ,OAAJA,QAAI,IAAJA,OAAA,EAAAA,EAAMd,UAAyB,KAC/F,OACI,yBAAK5F,UAAU,iBACToC,EAAQ,kBAAC,EAAD,CAAOA,MAAOA,IAAW,KACnC,yBAAKpC,UAAU,kBAAkBiH,YAAazB,EAAW,SAACvC,GAAD,OAAOwC,EAAgBxC,EAAG,CAAC2C,MAAO,eAAW/C,GAClG,yBAAK7C,UAAU,eAAf,SAGA,kBAAC,EAAD,CAAY+E,SAAUA,EAAUC,MAAOA,GAAgB,GAAIjC,SAAUA,IACpE+D,EACGA,EAAM9E,KAAI,SAAC0E,GAAD,OACN,kBAAC,EAAD,CAAM5G,KAAM4G,EAAMnB,gBAAiBA,EAAiBC,SAAUA,EAAUC,gBAAiBA,OAE/F,MAEN,yBAAKzF,UAAU,kBAAkBiH,YAAazB,EAAW,SAACvC,GAAD,OAAOwC,EAAgBxC,EAAG,CAAC2C,MAAO,sBAAkB/C,GACzG,yBAAK7C,UAAU,eAAf,eAGC+G,EACGA,EAAW/E,KAAI,SAAC0E,GAAD,OACX,kBAAC,EAAD,CAAM5G,KAAM4G,EAAMnB,gBAAiBA,EAAiBC,SAAUA,EAAUC,gBAAiBA,OAE/F,MAEN,yBAAKzF,UAAU,kBAAkBiH,YAAazB,EAAW,SAACvC,GAAD,OAAOwC,EAAgBxC,EAAG,CAAC2C,MAAO,oBAAgB/C,GACvG,yBAAK7C,UAAU,eAAf,aAGCgH,EACGA,EAAUhF,KAAI,SAAC0E,GAAD,OACV,kBAAC,EAAD,CAAM5G,KAAM4G,EAAMnB,gBAAiBA,EAAiBC,SAAUA,EAAUC,gBAAiBA,OAE/F,QChEHyB,EAvBgB,WAAO,IAC1B9F,EAAO+C,cAAP/C,GADyB,EAEP/B,qBAFO,mBAE1B+E,EAF0B,KAEnBC,EAFmB,KAajC,OATA7E,qBAAU,YACQ,uCAAG,4BAAAC,EAAA,sEACKC,IAAMC,IAAN,qBAAwByB,GAAM,CAAExB,iBAAiB,IADtD,OACPC,EADO,OAEbwE,EAASxE,EAAIC,MAFA,2CAAH,qDAIdqH,KACD,IAIC,6BACI,kBAAC,EAAD,CAAQtG,MAAOuD,EAAQA,EAAM/C,KAAO,GAAIP,YAAasD,EAAQA,EAAMtD,YAAc,KACjF,kBAAC,EAAD,KACI,kBAAC,EAAD,SCgCDsG,EApDM,WAAO,IAAD,EACW/H,mBAAiB,IAD5B,mBAChBe,EADgB,KACLiH,EADK,OAEShI,mBAAiB,IAF1B,mBAEhBiI,EAFgB,KAENC,EAFM,OAGGlI,mBAAiB,IAHpB,mBAGhBmI,EAHgB,KAGTC,EAHS,OAISpI,mBAAiB,IAJ1B,mBAIhBqI,EAJgB,KAINC,EAJM,OAKGtI,mBAAwB,MAL3B,mBAKhB+C,EALgB,KAKTW,EALS,KAMjB/B,EAAUC,cAsBhB,OACI,6BACMmB,EAAQ,kBAAC,EAAD,CAAOA,MAAOA,IAAW,KACnC,0BAAMY,SAvBC,SAACC,GACZA,EAAEC,iBACY,uCAAG,sBAAAzD,EAAA,+EAESC,IAAMyD,KAAK,gBAAiB,CAC1C/C,YACAkH,WACAE,QACAE,aANK,6DAST3E,EAAS,KAAIS,SAAS1D,KAAK2D,KATlB,wDAAH,oDAYdmE,GACKxF,GACDpB,EAAQG,KAAR,YAQI,yBAAKnB,UAAU,QACX,yBAAKA,UAAU,iBACX,2BAAOA,UAAU,gBAAjB,cACA,2BAAO2D,KAAK,OAAO3D,UAAU,sBAAsB4D,UAAW,GAAIC,UAAQ,EAACC,SAAU,SAACb,GAAD,OAAOoE,EAAapE,EAAEc,OAAOC,WAEtH,yBAAKhE,UAAU,sBACX,2BAAOA,UAAU,gBAAjB,aACA,2BAAO2D,KAAK,OAAO3D,UAAU,sBAAsB4D,UAAW,GAAIC,UAAQ,EAACC,SAAU,SAACb,GAAD,OAAOsE,EAAYtE,EAAEc,OAAOC,YAGzH,2BAAOhE,UAAU,gBAAjB,SACA,2BAAO2D,KAAK,QAAQ3D,UAAU,UAAU4D,UAAW,IAAKC,UAAQ,EAACC,SAAU,SAACb,GAAD,OAAOwE,EAASxE,EAAEc,OAAOC,UACpG,2BAAOhE,UAAU,gBAAjB,YACA,2BAAO2D,KAAK,WAAW3D,UAAU,UAAU4D,UAAW,IAAKC,UAAQ,EAACC,SAAU,SAACb,GAAD,OAAO0E,EAAY1E,EAAEc,OAAOC,UAC1G,2BAAOL,KAAK,SAAS3D,UAAU,YAAYgE,MAAM,cCtClD6D,EAVG,WACd,OACI,yBAAK7H,UAAU,yDACX,yBAAKA,UAAU,IACX,kBAAC,EAAD,SCiED8H,EAhEY,WACvB,IAAM9G,EAAUC,cADa,EAEL5B,qBAFK,mBAEtBC,EAFsB,KAEhBC,EAFgB,OAGKF,mBAAiB,IAHtB,mBAGtBe,EAHsB,KAGXiH,EAHW,OAIGhI,mBAAiB,IAJpB,mBAItBiI,EAJsB,KAIZC,EAJY,OAKHlI,mBAAiB,IALd,mBAKtBmI,EALsB,KAKfC,EALe,OAMGpI,mBAAiB,IANpB,mBAMtBqI,EANsB,KAMZC,EANY,OAOHtI,mBAAwB,MAPrB,mBAOtB+C,EAPsB,KAOfW,EAPe,KAS7BvD,qBAAU,YACO,uCAAG,4BAAAC,EAAA,sEACMC,IAAMC,IAAI,YAAa,CACrCC,iBAAiB,IAFT,OACNC,EADM,OAIZN,EAAQM,EAAIC,MAJA,2CAAH,qDAMbC,KACD,IAwBH,OACI,6BACI,kBAAC,EAAD,CAAQc,MAAM,aACd,kBAAC,EAAD,KACI,yBAAKb,UAAU,iBACToC,EAAQ,kBAAC,EAAD,CAAOA,MAAOA,IAAW,KACnC,0BAAMY,SA3BP,SAACC,GACX,OAADA,QAAC,IAADA,KAAGC,iBACa,uCAAG,sBAAAzD,EAAA,+EAEOC,IAAMqI,IAAI,mBAAoB,CAC5C3H,UAAWA,IAAS,OAAed,QAAf,IAAeA,OAAf,EAAeA,EAAMc,WACzCkH,SAAUA,IAAQ,OAAchI,QAAd,IAAcA,OAAd,EAAcA,EAAMgI,UACtCE,MAAOA,IAAK,OAAWlI,QAAX,IAAWA,OAAX,EAAWA,EAAMkI,OAC7BE,YACD,CACC9H,iBAAiB,IARV,cAUHE,MACJkB,EAAQG,KAAK,KAXN,gDAcX4B,EAAS,KAAIS,SAAS1D,KAAK2D,KAdhB,yDAAH,oDAiBhBuE,KASgB,2BAAOhI,UAAU,gBAAjB,cACA,2BAAOqF,YAAW,OAAE/F,QAAF,IAAEA,OAAF,EAAEA,EAAMc,UAAWuD,KAAK,OAAO3D,UAAU,UAAU4D,UAAW,IAAKE,SAAU,SAACb,GAAD,OAAOoE,EAAapE,EAAEc,OAAOC,UAC5H,2BAAOhE,UAAU,gBAAjB,aACA,2BAAOqF,YAAW,OAAE/F,QAAF,IAAEA,OAAF,EAAEA,EAAMgI,SAAU3D,KAAK,OAAO3D,UAAU,UAAU4D,UAAW,IAAKE,SAAU,SAAAb,GAAC,OAAIsE,EAAYtE,EAAEc,OAAOC,UACxH,2BAAOhE,UAAU,gBAAjB,SACA,2BAAOqF,YAAW,OAAE/F,QAAF,IAAEA,OAAF,EAAEA,EAAMkI,MAAO7D,KAAK,OAAO3D,UAAU,UAAU4D,UAAW,IAAKE,SAAU,SAAAb,GAAC,OAAIwE,EAASxE,EAAEc,OAAOC,UAClH,2BAAOhE,UAAU,gBAAjB,YACA,2BAAO2D,KAAK,WAAW3D,UAAU,UAAU4D,UAAW,IAAKC,UAAQ,EAACC,SAAU,SAAAb,GAAC,OAAI0E,EAAY1E,EAAEc,OAAOC,UACxG,2BAAOL,KAAK,SAAS3D,UAAU,YAAYgE,MAAM,gBC9DnEiE,EAAcC,IAAMC,cAAc,IAE3BC,EAAeH,EAAYI,SAGzBJ,GAFaA,EAAYK,SAEzBL,GCsCAM,EAvCD,WAAO,IAAD,EACUlJ,mBAAiB,IAD3B,mBACTmI,EADS,KACFC,EADE,OAEgBpI,mBAAiB,IAFjC,mBAETqI,EAFS,KAECC,EAFD,OAGUtI,qBAHV,mBAGT+C,EAHS,KAGFW,EAHE,KAKRyF,EADKC,qBAAgBR,GACrBO,YACFxH,EAAUC,cAmBhB,OACI,6BACMmB,EAAQ,kBAAC,EAAD,CAAOA,MAAOA,IAAW,KACnC,0BAAMY,SArBC,SAACC,GACZA,EAAEC,iBACS,uCAAG,sBAAAzD,EAAA,+EAEYC,IAAMyD,KAAK,aAAc,CACvCqE,QACAE,YACD,CAAE9H,iBAAiB,IALhB,cAMCE,OACHkB,EAAQG,KAAK,KACbqH,GAAY,IARV,gDAWNzF,EAAS,KAAIS,SAAS1D,KAAK2D,KAXrB,yDAAH,oDAcXiF,KAMQ,2BAAO1I,UAAU,gBAAjB,SACA,2BAAO2D,KAAK,QAAQ3D,UAAU,UAAU4D,UAAW,IAAKC,UAAQ,EAACC,SAAU,SAACb,GAAD,OAAOwE,EAASxE,EAAEc,OAAOC,UACpG,2BAAOhE,UAAU,gBAAjB,YACA,2BAAO2D,KAAK,WAAW3D,UAAU,UAAU4D,UAAW,IAAKC,UAAQ,EAACC,SAAU,SAACb,GAAD,OAAO0E,EAAY1E,EAAEc,OAAOC,UAC1G,2BAAOL,KAAK,SAAS3D,UAAU,YAAYgE,MAAM,cCmBlD2E,EAnDF,WACT,IAAM3H,EAAUC,cADD,EAEW5B,qBAFX,mBAED0D,GAFC,WAIPyF,EADKC,qBAAgBR,GACrBO,YAkBR,OACI,yBAAKxI,UAAU,iBACX,yBAAKA,UAAU,sBACX,yBAAKA,UAAU,aAAf,2BAGA,yBAAKA,UAAU,gBAAf,gDAGA,yBAAKA,UAAU,QACX,yBAAKA,UAAU,uBAAuBkB,QAAS,kBAAMF,EAAQG,KAAK,YAAlE,SAGA,yBAAKnB,UAAU,uBAAuBkB,QAAS,kBAAMF,EAAQG,KAAK,eAAlE,aAIJ,yBAAKnB,UAAU,sBAAsBkB,QAlC/B,YACH,uCAAG,sBAAAzB,EAAA,+EAEYC,IAAMyD,KAAK,aAAc,CACvCqE,MAAO,gBACPE,SAAU,YACX,CAAE9H,iBAAiB,IALhB,cAMCE,OACHkB,EAAQG,KAAK,KACbqH,GAAY,IARV,gDAWNzF,EAAS,KAAIS,SAAS1D,KAAK2D,KAXrB,yDAAH,qDAcXiF,KAmBQ,SAIJ,yBAAK1I,UAAU,qBACX,kBAAC,EAAD,MACA,kBAAC,EAAD,SCvCD6H,EAVG,WACd,OACI,yBAAK7H,UAAU,yDACX,yBAAKA,UAAU,IACX,kBAAC,EAAD,SCgFD4I,MAlEf,WAAgB,IAAD,EACmBvJ,mBAAyB,MAD5C,mBACNwJ,EADM,KACIL,EADJ,KAcb,OAZAhJ,qBAAU,YACQ,uCAAG,sBAAAC,EAAA,+EAEGC,IAAMC,IAAI,kBAAmB,CAAEC,iBAAiB,IAFnD,cAGf4I,GAAY,GAHG,gDAKfA,GAAY,GALG,yDAAH,qDAQhBM,KACC,CAACD,IAGF,kBAACT,EAAD,CAAcpE,MAAO,CAACwE,gBACpB,yBAAKxI,UAAU,QACC,IAAb6I,EACD,yBAAK7I,UAAU,QACb,kBAAC,IAAD,KACA,kBAACZ,EAAD,MACA,yBAAKY,UAAU,mBACX,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO+I,KAAK,IAAIC,OAAK,GACnB,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOD,KAAK,QAAQC,OAAK,GACvB,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOD,KAAK,kBAAkBC,OAAK,GACjC,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOD,KAAK,gBAAgBC,OAAK,GAC/B,kBAACtE,EAAD,OAEF,kBAAC,IAAD,CAAOqE,KAAK,2BAA2BC,OAAK,GAC1C,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOD,KAAK,aAAaC,OAAK,GAC5B,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOD,KAAK,YAAYC,OAAK,GAC3B,kBAAC,EAAD,YAMK,IAAbH,EAAqB,kBAAC,IAAD,KACnB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOE,KAAK,IAAIC,OAAK,GACnB,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOD,KAAK,SAASC,OAAK,GACxB,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOD,KAAK,YAAYC,OAAK,GAC3B,kBAACC,EAAD,SAGM,aCrEFC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDiIpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBxG,MAAK,SAAAyG,GACJA,EAAaC,gBAEdC,OAAM,SAAA7H,GACL8H,QAAQ9H,MAAMA,EAAM+H,c","file":"static/js/main.f295e871.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/image1.e9a86709.svg\";","module.exports = __webpack_public_path__ + \"static/media/plus.a69b1e05.svg\";","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { Link } from \"react-router-dom\";\nimport { UserInterface } from './Interfaces/UserInterface'\n\nexport default function Sidebar() {\n    const [user, setUser] = useState<UserInterface>()\n\n    useEffect(() => {\n        const getUser = async () => {\n            const res = await axios.get('/api/user', {\n                withCredentials: true\n            })\n            setUser(res.data)\n        }\n        getUser()\n    }, [])\n    return (\n        <div className=\"sidebar\">\n            <div className=\"sidebarUserContainer\">\n                <img src={require('../assets/image1.svg')} className='sidebarProfilePicture' alt='Sidebar profile' />\n                <p className=\"sidebarUserName\">{user ? user.firstName : null}</p>\n                <p className=\"sidebarSettingsLabel\"><Link to='/settings'>Settings</Link></p>\n            </div>\n\n            <div className=\"sidebarListContainer\">\n                <div className='sidebarItem'>\n                    <span>\n                        <svg fill=\"#000000\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"16px\" height=\"16px\">    \n                            <path d=\"M 12 2 A 1 1 0 0 0 11.289062 2.296875 L 1.203125 11.097656 A 0.5 0.5 0 0 0 1 11.5 A 0.5 0.5 0 0 0 1.5 12 L 4 12 L 4 20 C 4 20.552 4.448 21 5 21 L 9 21 C 9.552 21 10 20.552 10 20 L 10 14 L 14 14 L 14 20 C 14 20.552 14.448 21 15 21 L 19 21 C 19.552 21 20 20.552 20 20 L 20 12 L 22.5 12 A 0.5 0.5 0 0 0 23 11.5 A 0.5 0.5 0 0 0 22.796875 11.097656 L 12.716797 2.3027344 A 1 1 0 0 0 12.710938 2.296875 A 1 1 0 0 0 12 2 z\"/>\n                        </svg>\n                    </span>\n                    <p className=\"px-2\"><Link to='/'>Home</Link></p>\n                </div>\n                <div className='sidebarItem'>\n                    <span>\n                        <svg fill=\"#000000\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"16px\" height=\"16px\">    \n                            <path d=\"M12,2C6.477,2,2,6.477,2,12s4.477,10,10,10s10-4.477,10-10S17.523,2,12,2z M16,13h-3v3c0,0.552-0.448,1-1,1h0 c-0.552,0-1-0.448-1-1v-3H8c-0.552,0-1-0.448-1-1v0c0-0.552,0.448-1,1-1h3V8c0-0.552,0.448-1,1-1h0c0.552,0,1,0.448,1,1v3h3 c0.552,0,1,0.448,1,1v0C17,12.552,16.552,13,16,13z\"/>\n                        </svg>\n                    </span> \n                    <p className=\"px-2\"><Link to='/create/project/'>Create New Project</Link></p>\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\n\ninterface Props{\n    title: String,\n    description?: String\n}\n\nexport const Header: React.FC<Props> = ({ title, description }) => {\n    return (\n        <div className=\"headerContainer\">\n            <p className=\"headerTitle\">{ title }</p>\n                {description ?\n                    <div className='headerDescription'>\n                        {description}\n                    </div>\n                : null}\n        </div>\n    )\n}\n\nexport default Header","import React from 'react'\nimport { Props } from './Interfaces/ProjectInterface'\nimport { useHistory } from \"react-router-dom\";\n\nexport const ProjectCard: React.FC<Props> = ({ data }) => {\n    const history = useHistory()\n    return (\n        <div className=\"projectCardContainer\" onClick={() => history.push(`/projects/${data.id}`)}>\n            <p className=\"projectName\">{data.name}</p>\n            <p className=\"projectDescription\">{data.description}</p>\n            <div className=\"projectCategoryContainer\">\n                <p className=\"projectCategory\">{data.category}</p>\n            </div>\n        </div> \n    )\n}\n\nexport default ProjectCard","import React from 'react'\nimport { useHistory } from \"react-router-dom\";\n\nexport const NewCard: React.FC<{title: String, destination: String}> = ({ title, destination }) => {\n    const history = useHistory()\n    const createNew = () => {\n        history.push(`/${destination}`)\n    }\n    return (\n        <div className=\"newCardContainer\" onClick={createNew}>\n            <p className=\"newCardTitle\">{title}</p>\n                <span>\n                    <img className=\"newCardImage\" src={require('../assets/plus.svg')} alt='Create new project'/>\n                </span>\n        </div>\n    )\n}\n\nexport default NewCard\n","export interface ProjectInterface {\n    id: number,\n    userId: string,\n    name: string,\n    description: string,\n    category: string,\n    dueDate: string,\n    figma: string,\n    github: string,\n    privacy: boolean,\n    date: string\n}\n\nexport interface Props{\n    data: {\n        id: number,\n        userId: string,\n        name: string,\n        description: string,\n        category: string,\n        dueDate: string,\n        figma: string,\n        github: string,\n        privacy: boolean,\n    }\n}\n\nexport const init = [{\n    \"id\": 0,\n    \"userId\": \"\",\n    \"name\": \"\",\n    \"description\": \"\",\n    \"category\": \"\",\n    \"dueDate\": \"\",\n    \"figma\": \"\",\n    \"github\": \"\",\n    \"privacy\": false,\n    \"date\": \"\",\n}]","import React from 'react'\n\nexport const Layout: React.FC = ({ children }) => {\n    return (\n        <div className=\"layout w-max-sm max-h-full\">\n            {children}\n        </div>\n    )\n}\n\nexport default Layout","import React, {useEffect, useState} from 'react'\nimport Header from './Header'\nimport ProjectCard from './ProjectCard'\nimport NewCard from './NewCard'\nimport { ProjectInterface, init } from './Interfaces/ProjectInterface'\nimport Layout from './Layout'\nimport axios from 'axios'\n\nexport const Projects: React.FC =() => {\n    const [projects, setProjects] = useState<ProjectInterface[]>(init)\n    const getProjects = async () => {\n        const res = await axios.get('/api/projects', { withCredentials: true })\n        setProjects(res.data)\n    }\n\n    useEffect(() => {\n        getProjects()\n    }, [])\n    return (\n        <div className=\"\">\n            <Header title=\"Projects\"/>\n            <Layout>\n                {projects.map((project) => (\n                    <ProjectCard key={project.id} data={project} />\n                ))}\n                <NewCard title='Create New Project' destination={`create/project/`}/>\n            </Layout>\n        </div>\n    )\n}\n\nexport default Projects","import React from 'react'\n\ninterface Error{\n    error: string\n}\n\nconst Error: React.FC<Error> = ({ error }) => {\n    return (\n        <div>\n            <div className='errorContainer'>\n                { error }\n            </div>\n        </div>\n    )\n}\n\nexport default Error\n","import React, {useState} from 'react'\nimport Header from './Header'\nimport Layout from './Layout'\nimport Error from './Error'\nimport axios from 'axios'\nimport { useHistory } from \"react-router-dom\";\n\nconst CreateProject: React.FC = () => {\n    const [name, setName] = useState('')\n    const [description, setDescription] = useState('')\n    const [category, setCategory] = useState<any>('Programming')\n    const [dueDate, setDueDate] = useState('')\n    const [privacy, setPrivacy] = useState<any>('Private')\n    const [project, setProject] = useState<any>(undefined)\n    const [error, setError] = useState<string | null>()\n    const history = useHistory()\n    const onSubmit = (e: React.FormEvent<HTMLFormElement> | undefined): void => {\n        e?.preventDefault()\n        const createProject = async () => {\n            try{\n                const res: any = await axios.post('/api/project/add', {\n                    name,\n                    description,\n                    category,\n                    dueDate,\n                    github: 'github.com',\n                    figma: 'figma.com',\n                    privacy: privacy === 'Private' ? true : false\n                }, { withCredentials: true })\n                    .then(r => setProject(r.data))  \n            }catch(err){\n                setError(err.response.data.msg)\n            }\n        }\n        createProject()\n    }\n    if(project){\n        history.push(`/projects/${project.id}`)\n    }\n    return (\n        <div>\n           <Header title='Create'/> \n            <Layout>\n                <div className='mx-auto py-16'>\n                    { error ? <Error error={error}/> : null}\n                    <form onSubmit={onSubmit}>\n                        <label className='textboxLabel'>Name</label>\n                        <input type='text' className='textbox' maxLength={100} required onChange={(e) => setName(e.target.value)}/>\n                        <label className='textboxLabel'>Description</label>\n                        <textarea className='descriptionTextArea' onChange={(e) => setDescription(e.target.value)} maxLength={200}/>\n                        <label className='textboxLabel'>Category</label>\n                        <select className='categorySelector' value={category} required onChange={(e) => setCategory(e.target.value)}>\n                            <option value='Programming'>Programming</option>\n                            <option value='Web devlopment'>Web devlopment</option>\n                            <option value='Design'>Design</option>\n                            <option value='Writing'>Writing</option>\n                            <option value='Architecture'>Architecture</option>\n                            <option value='Marketing'>Marketing</option>\n                            <option value='Art'>Art</option>\n                            <option value='Video'>Video</option>\n                        </select>\n                        <label className='textboxLabel'>Due By</label>\n                        <input type='date' className='dateSelector'onChange={(e) => setDueDate(e.target.value)}/>\n                        <label className='textboxLabel'>Privacy</label>\n                        <select className='categorySelector' value={privacy} onChange={(e) => setPrivacy(e.target.value)}>\n                            <option value='Private'>Private</option>\n                            <option value='Public'>Public</option>\n                        </select>\n                        <input type='submit' className='submitBtn' value='Submit'/>\n                    </form> \n                </div>\n           </Layout>\n        </div>\n    )\n}\n\nexport default CreateProject\n","import React, { useState } from 'react'\nimport Header from './Header'\nimport Layout from './Layout'\nimport Error from './Error'\nimport axios from 'axios'\nimport { useHistory } from \"react-router-dom\";\nimport { useParams } from 'react-router-dom'\n\nexport const CreatePhase: React.FC = () => {\n    const history = useHistory()\n    const { projectId } = useParams<any>()\n    const [name, setName] = useState('')\n    const [description, setDescription] = useState('')\n    const [category, setCategory] = useState('Programming')\n    const [dueDate, setDueDate] = useState('')\n    const [phase, setPhase] = useState<any>(null)\n    const [error, setError] = useState<string | null>(null)\n    const submit = (e: React.FormEvent<HTMLFormElement> | undefined): void => {\n        e?.preventDefault()\n        const createPhase = async () => {\n            try{\n                const res = axios.post('/api/phase/add', {\n                    projectId,\n                    name,\n                    phaseNumber: 1,\n                    description,\n                    category,\n                    dueDate\n                }, { withCredentials: true })\n                    .then(r => setPhase(r.data))\n            }catch(err){\n                setError(err.response.data.msg)\n            }\n        }\n        createPhase()\n    }\n\n    if (phase){\n        history.push(`/phase/${phase.id}`)\n    }\n    return (\n        <div>\n            <Header title='Create'/>\n            <Layout>\n                <div className='mx-auto py-16'>\n                    { error ? <Error error={error}/> : null}\n                    <form onSubmit={submit}>\n                        <label className='textboxLabel'>Name</label>\n                        <input type='text' className='textbox' maxLength={100} required onChange={e => setName(e.target.value)}/>\n                        <label className='textboxLabel'>Description</label>\n                        <textarea className='descriptionTextArea'  maxLength={200} onChange={e => setDescription(e.target.value)}/>\n                        <label className='textboxLabel'>Category</label>\n                        <select className='categorySelector' value={category} onChange={e => setCategory(e.target.value)}>\n                            <option value='Programming'>Programming</option>\n                            <option value='Web devlopment'>Web devlopment</option>\n                            <option value='Design'>Design</option>\n                            <option value='Writing'>Writing</option>\n                            <option value='Architecture'>Architecture</option>\n                            <option value='Marketing'>Marketing</option>\n                            <option value='Art'>Art</option>\n                            <option value='Video'>Video</option>\n                        </select>\n                        <label className='textboxLabel'>Due By</label>\n                        <input type='date' className='dateSelector' onChange={e => setDueDate(e.target.value)}/>\n                        <input type='submit' className='submitBtn' value='Submit'/>\n                    </form> \n                </div>\n            </Layout>\n        </div>\n    )\n}\n\nexport default CreatePhase","import React from 'react'\nimport { Props } from './Interfaces/PhaseInterface'\nimport { useHistory } from \"react-router-dom\";\n\nconst PhaseCard: React.FC<Props> = ({ data }) => {\n    const history = useHistory()\n    return (\n        <div className='phaseCardContainer' onClick={() => history.push(`/phase/${data.id}`)}>\n            <div className='phaseName'>\n                {data.name}\n            </div>\n            <div className=\"phaseCategoryContainer\">\n                <p className=\"phaseCategory\">{data.category}</p>\n            </div>\n            <div className='phaseDescription'>\n                {data.description}\n            </div>\n        </div>\n    )\n}\n\nexport default PhaseCard\n","import React, { useState, useEffect } from 'react'\nimport { ProjectInterface } from './Interfaces/ProjectInterface'\nimport { PhaseInterface } from './Interfaces/PhaseInterface'\nimport axios from 'axios'\nimport Layout from './Layout'\nimport Header from './Header'\nimport PhaseCard from './PhaseCard'\nimport NewCard from './NewCard'\nimport { useParams } from 'react-router-dom'\n\nexport default function Project() {\n    const { id } = useParams<any>()\n    const [project, setProject] = useState<ProjectInterface>()\n    const [phases, setPhase] = useState<PhaseInterface[]>()\n\n    useEffect(() => {\n        const getProject = async () => {\n            const res = await axios.get(`/api/project/${id}`, { withCredentials: true })\n            setProject(res.data)\n        }\n        getProject()\n        const getPhases = async () => {\n            const res = await axios.get(`/api/phases/${id}`, { withCredentials: true })\n            setPhase(res.data)\n        }\n        getPhases()\n    }, [])\n    return (\n        <div>\n            <Header title={project ? project.name : ''} description={project ? project.description : ''}/>\n            <Layout>\n                {phases ? \n                    phases.map((phase: any) => (\n                            <PhaseCard key={phase.id} data={phase} />\n                    ))\n                : null}\n                {project ? <NewCard title='Create New Phase' destination={`create/phase/${project.id}`}/> : null}\n            </Layout>\n        </div>\n    )\n}\n","import React, { useState } from 'react'\nimport axios from 'axios'\nimport { useParams } from 'react-router-dom'\nimport { TaskInterface } from './Interfaces/TaskInterface'\n\nexport const CreateTask: React.FC<{ setTasks: React.Dispatch<React.SetStateAction<TaskInterface[] | undefined>>, tasks: TaskInterface[], setError: React.Dispatch<React.SetStateAction<string | null>>}> = ({ setTasks, tasks, setError }) => {\n    const { id } = useParams<any>()\n    const [taskText, setTaskText] = useState('')\n    const submit = (e: React.FormEvent<HTMLFormElement>) => {\n        e.preventDefault()\n        const createTask = async () => {\n            try{\n                const res = await axios.post('/api/task/add', {\n                    phaseId: id,\n                    taskText\n                }, { withCredentials: true})\n                setTaskText('')\n                setTasks([...tasks, res.data])\n            }catch(err){\n                setError(err.response.data.msg)\n            }\n        }\n        createTask()\n    }\n    return (\n        <form onSubmit={submit}>\n            <textarea className='taskTextArea' placeholder='Enter a new task...' value={taskText} onChange={(e) => setTaskText(e.target.value)}></textarea>\n            <input type='submit' className='submitBtn' value='Submit' />\n        </form>\n    )\n}\n\nexport default CreateTask\n","import React, {useState} from 'react'\nimport { TaskProps } from './Interfaces/TaskInterface'\n\nconst Task: React.FC<TaskProps | any> = ({ data, handleDragStart, dragging, handleDragEnter }) => {\n    return (\n        <div draggable \n        onDragStart={(e) => handleDragStart(e, {id: data.id, stage: data.stage})}\n        className='task'>\n            {data.taskText}\n        </div>\n    )\n}\n\nexport default Task\n","import React, { useState, useEffect, useRef } from 'react'\nimport CreateTask from './CreateTask'\nimport Task from './Task'\nimport Error from './Error'\nimport { TaskInterface } from './Interfaces/TaskInterface'\nimport { useParams } from 'react-router-dom'\nimport axios from 'axios'\n\nexport const Tasks = () => {\n    const [tasks, setTasks] = useState<TaskInterface[] | any>()\n    const [dragging, setDragging] = useState<boolean>(false)\n    const [error, setError] = useState<string | null>(null)\n    const { id } = useParams<any>()\n    const dragItem = useRef<any>()\n    const dragNode = useRef<any>()\n\n    useEffect(() => {\n        const getTasks = async () => {\n            const res = await axios.get(`/api/tasks/${id}`, { withCredentials: true })\n            setTasks(res.data)\n        }\n        getTasks()\n    }, [])\n\n    const handleDragStart = (e: any, params: any) => {\n        dragItem.current = params\n        dragNode.current = e.target\n        dragNode.current?.addEventListener('dragend', handleDragEnd)\n        setTimeout(() => {\n            setDragging(true)\n        }, 0)\n    }\n\n    const handleDragEnter = (e: any, params: any) => {\n        e.preventDefault()\n        if (params.stage !== dragItem.current.stage){\n            const newList = tasks?.filter((task: TaskInterface) => task.id !== dragItem.current.id)\n            const currentTask = tasks.filter((task: TaskInterface) => task.id === dragItem.current.id)\n            setTasks((task: TaskInterface[]) => {\n                if (task !== [...newList, {...currentTask[0], stage: params.stage}]){\n                    return [...newList, {...currentTask[0], stage: params.stage}]\n                }\n            })\n            dragItem.current.stage = params.stage\n        }\n    }\n\n    const updateStage = async () => {\n        const res = await axios.post(`/api/task/${dragItem.current.id}/${dragItem.current.stage}`, \n        { withCredentials: true })\n    }\n\n    const handleDragEnd = () => {\n        updateStage()\n        setDragging(false)\n        dragNode.current?.removeEventListener('dragend', handleDragEnd)\n        dragItem.current = null\n        dragNode.current = null\n    }\n    \n    const todos = tasks ? tasks.filter((task: TaskInterface) => task?.stage === 'todo') : null\n    const inProgress = tasks ? tasks.filter((task: TaskInterface) => task?.stage === 'in_progress') : null\n    const completed = tasks ? tasks.filter((task: TaskInterface) => task?.stage === 'completed') : null\n    return (\n        <div className='taskContainer'>\n            { error ? <Error error={error}/> : null}\n            <div className='columnContainer' onDragEnter={dragging ? (e) => handleDragEnter(e, {stage: 'todo'}) : undefined}>\n                <div className='columnTitle'>\n                    To do\n                </div>\n                <CreateTask setTasks={setTasks} tasks={tasks ? tasks : []} setError={setError} />\n                {todos ?\n                    todos.map((task: TaskInterface) => (\n                        <Task data={task} handleDragStart={handleDragStart} dragging={dragging} handleDragEnter={handleDragEnter}/>\n                    )) \n                : null}\n            </div>\n            <div className='columnContainer' onDragEnter={dragging ? (e) => handleDragEnter(e, {stage: 'in_progress'}) : undefined}>\n                <div className='columnTitle'>\n                    In progress\n                </div>\n                {inProgress ?\n                    inProgress.map((task: TaskInterface) => (\n                        <Task data={task} handleDragStart={handleDragStart} dragging={dragging} handleDragEnter={handleDragEnter}/>\n                    )) \n                : null}\n            </div>\n            <div className='columnContainer' onDragEnter={dragging ? (e) => handleDragEnter(e, {stage: 'completed'}) : undefined}>\n                <div className='columnTitle'>\n                    Completed\n                </div>\n                {completed ?\n                    completed.map((task: TaskInterface) => (\n                        <Task data={task} handleDragStart={handleDragStart} dragging={dragging} handleDragEnter={handleDragEnter}/>\n                    )) \n                : null}\n            </div>\n        </div>\n    )\n}\n\nexport default Tasks\n","import React, { useState, useEffect } from 'react'\nimport Header from './Header'\nimport Layout from './Layout'\nimport Tasks from './Tasks'\nimport { useParams } from 'react-router-dom'\nimport { PhaseInterface } from './Interfaces/PhaseInterface'\nimport axios from 'axios'\n\nexport const Phase: React.FC = () => {\n    const { id } = useParams<any>()\n    const [phase, setPhase] = useState<PhaseInterface>()\n\n    useEffect(() => {\n        const getPhase = async () => {\n            const res = await axios.get(`/api/phase/${id}`, { withCredentials: true})\n            setPhase(res.data)\n        }\n        getPhase()\n    }, [])\n\n\n    return (\n        <div>\n            <Header title={phase ? phase.name : ''} description={phase ? phase.description : ''}/>\n            <Layout>\n                <Tasks />\n            </Layout>\n        </div>\n    )\n}\n\nexport default Phase\n","import React, { useState } from 'react'\nimport axios from 'axios'\nimport Error from './Error'\nimport { useHistory } from \"react-router-dom\";\n\nconst Registration = () => {\n    const [firstName, setFirstName] = useState<string>('')\n    const [lastName, setLastName] = useState<string>('')\n    const [email, setEmail] = useState<string>('')\n    const [password, setPassword] = useState<string>('')\n    const [error, setError] = useState<string | null>(null)\n    const history = useHistory()\n\n    const submit = (e: React.FormEvent<HTMLFormElement>) => {\n        e.preventDefault()\n        const register = async () => {\n            try{\n                const res = await axios.post('/api/register', {\n                    firstName,\n                    lastName,\n                    email,\n                    password\n                })\n            }catch(err){\n                setError(err.response.data.msg)\n            }\n        }\n        register()\n        if (!error){\n            history.push(`/login`)\n        }\n    }\n\n    return (\n        <div>\n            { error ? <Error error={error}/> : null}\n            <form onSubmit={submit}>\n                <div className='flex'>\n                    <div className='flex flex-col'>\n                        <label className='textboxLabel'>First Name</label>\n                        <input type='text' className='registrationTextbox' maxLength={50} required onChange={(e) => setFirstName(e.target.value)}/>\n                    </div>\n                    <div className='flex flex-col mx-2'>\n                        <label className='textboxLabel'>Last Name</label>\n                        <input type='text' className='registrationTextbox' maxLength={50} required onChange={(e) => setLastName(e.target.value)}/>\n                    </div>\n                </div>\n                <label className='textboxLabel'>Email</label>\n                <input type='email' className='textbox' maxLength={100} required onChange={(e) => setEmail(e.target.value)}/>\n                <label className='textboxLabel'>Password</label>\n                <input type='password' className='textbox' maxLength={100} required onChange={(e) => setPassword(e.target.value)}/>\n                <input type='submit' className='submitBtn' value='Submit' />\n            </form>\n        </div>\n    )\n}\n\nexport default Registration\n","import React from 'react'\nimport Registration from './Registration'\n\nconst LoginPage = () => {\n    return (\n        <div className='flex bg-gray-100 h-screen items-center flex-col py-24'>\n            <div className=''>\n                <Registration />\n            </div>\n        </div>\n    )\n}\n\nexport default LoginPage\n","import React, { useState, useEffect } from 'react'\nimport { useHistory } from \"react-router-dom\";\nimport { UserInterface } from './Interfaces/UserInterface'\nimport Header from './Header'\nimport Layout from './Layout'\nimport Error from './Error'\nimport axios from 'axios'\n\nconst Settings: React.FC = () => {\n    const history = useHistory()\n    const [user, setUser] = useState<UserInterface>()\n    const [firstName, setFirstName] = useState<string>('')\n    const [lastName, setLastName] = useState<string>('')\n    const [email, setEmail] = useState<string>('')\n    const [password, setPassword] = useState<string>('')\n    const [error, setError] = useState<string | null>(null)\n\n    useEffect(() => {\n        const getUser = async () => {\n            const res = await axios.get('/api/user', {\n                withCredentials: true\n            })\n            setUser(res.data)\n        }\n        getUser()\n    }, [])\n\n\n    const submit = (e: React.FormEvent<HTMLFormElement> | undefined) => {\n        e?.preventDefault()\n        const updateUser = async () => {\n            try{\n                const res = await axios.put('/api/user/update', {\n                    firstName: firstName ? firstName : user?.firstName,\n                    lastName: lastName ? lastName : user?.lastName,\n                    email: email ? email : user?.email,\n                    password\n                }, {\n                    withCredentials: true\n                })\n                if (res.data){\n                    history.push('/')\n                }\n            }catch(err){\n                setError(err.response.data.msg)\n            }\n        }\n        updateUser()\n    }\n    return (\n        <div>\n            <Header title='Settings' />\n            <Layout>\n                <div className='mx-auto py-16'>\n                    { error ? <Error error={error}/> : null}\n                    <form onSubmit={submit}>\n                        <label className='textboxLabel'>First Name</label>\n                        <input placeholder={user?.firstName} type='text' className='textbox' maxLength={100} onChange={(e) => setFirstName(e.target.value)}/>\n                        <label className='textboxLabel'>Last Name</label>\n                        <input placeholder={user?.lastName} type='text' className='textbox' maxLength={100} onChange={e => setLastName(e.target.value)} />\n                        <label className='textboxLabel'>Email</label>\n                        <input placeholder={user?.email} type='text' className='textbox' maxLength={100} onChange={e => setEmail(e.target.value)}/>\n                        <label className='textboxLabel'>Password</label>\n                        <input type='password' className='textbox' maxLength={100} required onChange={e => setPassword(e.target.value)}/>\n                        <input type='submit' className='submitBtn' value='Submit' />\n                    </form> \n                </div>\n            </Layout>\n        </div>\n    )\n}\n\nexport default Settings\n","import React, { useContext } from 'react'\n\nconst UserContext = React.createContext({})\n\nexport const UserProvider = UserContext.Provider\nexport const UserConsumer = UserContext.Consumer\n\nexport default UserContext","import React, { useState, useContext } from 'react'\nimport axios from 'axios'\nimport Error from './Error'\nimport UserContext from '../UserContext'\nimport { useHistory } from \"react-router-dom\";\n\nconst Login = () => {\n    const [email, setEmail] = useState<string>('')\n    const [password, setPassword] = useState<string>('')\n    const [error, setError] = useState<string | null>()\n    const user = useContext<any>(UserContext)\n    const { setLoggedIn } = user\n    const history = useHistory()\n    const submit = (e: React.FormEvent<HTMLFormElement>) => {\n        e.preventDefault()\n        const login = async () => {\n            try{\n                const res = await axios.post('/api/login', {\n                    email,\n                    password\n                }, { withCredentials: true })\n                if(res.data){\n                    history.push('/')\n                    setLoggedIn(true)\n                }\n            }catch(err){\n                setError(err.response.data.msg)\n            }\n        }\n        login()\n    }\n    return (\n        <div>\n            { error ? <Error error={error}/> : null}\n            <form onSubmit={submit}>\n                <label className='textboxLabel'>Email</label>\n                <input type='email' className='textbox' maxLength={100} required onChange={(e) => setEmail(e.target.value)}/>\n                <label className='textboxLabel'>Password</label>\n                <input type='password' className='textbox' maxLength={100} required onChange={(e) => setPassword(e.target.value)}/>\n                <input type='submit' className='submitBtn' value='Submit' />\n            </form>\n        </div>\n    )\n}\n\nexport default Login\n","import React, { useState, useContext } from 'react'\nimport Login from './Login'\nimport Registration from './Registration'\nimport UserContext from '../UserContext'\nimport { useHistory } from \"react-router-dom\";\nimport axios from 'axios'\n\nconst Home = () => {\n    const history = useHistory()\n    const [error, setError] = useState<string | null>()\n    const user = useContext<any>(UserContext)\n    const { setLoggedIn } = user\n    const demoLogin = () => {\n        const login = async () => {\n            try{\n                const res = await axios.post('/api/login', {\n                    email: 'demo@demo.com',\n                    password: 'demo1234'\n                }, { withCredentials: true })\n                if(res.data){\n                    history.push('/')\n                    setLoggedIn(true)\n                }\n            }catch(err){\n                setError(err.response.data.msg)\n            }\n        }\n        login()\n    }\n    return (\n        <div className='homeContainer'>\n            <div className='w-2/3 my-auto p-16'>\n                <div className='homeTitle'>\n                    Plan Your Next Project.\n                </div>\n                <div className='homeSubTitle'>\n                    Software. Design. Marketing. Education. Etc.\n                </div>\n                <div className='flex'>\n                    <div className='loginRegistrationBtn' onClick={() => history.push('/login')}>\n                        Login\n                    </div>\n                    <div className='loginRegistrationBtn' onClick={() => history.push('/register')}>\n                        Register\n                    </div>\n                </div>\n                <div className='demoBtn text-center' onClick={demoLogin}>\n                    Demo\n                </div>\n            </div>\n            <div className='loginRegistration'>\n                <Login />\n                <Registration />\n            </div>\n        </div>\n    )\n}\n\nexport default Home\n","import React from 'react'\nimport Login from './Login'\n\nconst LoginPage = () => {\n    return (\n        <div className='flex bg-gray-100 h-screen items-center flex-col py-24'>\n            <div className=''>\n                <Login />\n            </div>\n        </div>\n    )\n}\n\nexport default LoginPage\n","import React, { useState, useEffect } from 'react';\nimport Sidebar from './components/Sidebar'\nimport Projects from './components/Projects'\nimport CreateProject from './components/CreateProject'\nimport CreatePhase from './components/CreatePhase'\nimport Project from './components/Project'\nimport Phase from './components/Phase'\nimport Registration from './components/Registration'\nimport Login from './components/Login'\nimport RegistrationPage from './components/RegistrationPage'\nimport Settings from './components/Settings'\nimport Home from './components/Home'\nimport LoginPage from './components/LoginPage'\nimport axios from 'axios'\nimport { UserProvider } from './UserContext'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\nfunction App() {\n  const [loggedIn, setLoggedIn] = useState<boolean | null>(null)\n  useEffect(() => {\n    const isLoggedIn = async () => {\n      try{\n        const res = await axios.get('/api/isLoggedIn', { withCredentials: true })\n        setLoggedIn(true)\n      }catch(err){\n        setLoggedIn(false)\n      }\n    }\n    isLoggedIn()\n  }, [loggedIn])\n\n  return (\n    <UserProvider value={{setLoggedIn}}>\n      <div className=\"App\">\n        {loggedIn === true ?\n        <div className=\"flex\">\n          <Router>\n          <Sidebar />\n          <div className=\"flex-1 bg-white\">\n              <Switch>\n                <Route path='/' exact>\n                  <Projects />\n                </Route>\n                <Route path='/home' exact>\n                  <Projects />\n                </Route>\n                <Route path='/create/project' exact>\n                  <CreateProject />\n                </Route>\n                <Route path='/projects/:id' exact>\n                  <Project />\n                </Route>\n                <Route path='/create/phase/:projectId' exact>\n                  <CreatePhase />\n                </Route>\n                <Route path='/phase/:id' exact>\n                  <Phase />\n                </Route>\n                <Route path='/settings' exact>\n                  <Settings />\n                </Route>\n              </Switch>\n            </div>\n          </Router>\n        </div>\n        : loggedIn === false ? <Router>\n            <Switch>\n              <Route path='/' exact>\n                <Home />\n              </Route>\n              <Route path='/login' exact>\n                <LoginPage />\n              </Route>\n              <Route path='/register' exact>\n                <RegistrationPage />\n              </Route>\n            </Switch>\n          </Router> : 'loading'}\n      </div>\n    </UserProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/main.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}